#!/bin/bash

#############################################
ARCHIVE=/media/music
cd $ARCHIVE

# examples:
# https://blabla +cloud (download and save in cloud playlist)
# https://youtube.com/playlist? (download playlist)
# +cloud (play cloud playlist)
# always alright (play music)
# 
##############################################

STOPFLAG=/tmp/.stopmusic

logme() {
    echo $*
	logger -t youtube-play "$*"
}


play_stop() {
	ALL=$1
	[ -n "$ALL" ] && touch $STOPFLAG
	killall gst-play-1.0 2>/dev/null
}

play_file() {
	FILENAME="$1"
	
	#logger -t youtube-play "playing $1"
	play_stop
	send_message "${FILENAME/-???????????.*/}"
	gst-play-1.0 "$FILENAME"
}

send_message() {
	MESSAGE="$1"
	KEYBOARD="$2"
	[ -z "$KEYBOARD" ] && KEYBOARD='[".stop,.list,.next",".vol+,.help,.vol-"]'
	#echo "$MESSAGE"
	PASS=$(grep http_password ~/secrets.yaml | awk '{ print $2 }')
	curl -X POST -H "x-ha-access: $PASS" -H "Content-Type: application/json" \
		-d "{\"message\": \"$MESSAGE\", \"data\":{\"keyboard\":$KEYBOARD}}" \
		http://localhost:8123/api/services/notify/telegram
}

#WORDS="${1,,}" # lower case
IFS=' ' read -r -a WORDS <<< "$*" # lower and split into array

#LAST="${WORDS##* }"

COMMAND=${WORDS[-1]:0:1} # first char of last word

#exec 3>&1 1>> /tmp/youtube.log 2>&1
#set -x


if [ "$COMMAND" = "+" ]; then # playlist
	PLAYLIST=${WORDS[-1]:1:99}
	PLAYLIST=${PLAYLIST,,} # lowercase
	if [ -n "$PLAYLIST" ]; then
		unset WORDS[-1]
		MATCHED=$(find -maxdepth 1 -iname "*$PLAYLIST*" -type d | head -n 1)
		[ -n "$MATCHED" ] && PLAYLIST="$MATCHED"
		mkdir -p "$PLAYLIST"
		cd "$PLAYLIST"
	fi
fi

if [ "$COMMAND" = "." ]; then
	case ${WORDS[-1]:1:99} in
		stop)
			play_stop 'all'
			;;
		next)
			play_stop
			;;
		vol-)
			amixer set PCM 20%-
			;;	
		vol+)
			amixer set PCM 20%+
			;;	
		list)
			PLAYLISTS="$(find . -maxdepth 1 -type d -name "??*" | sort | xargs | sed 's|^..||' | sed 's| \.\/|\\n|g')"
			send_message "$PLAYLISTS"
			;;
		help)
			send_message "<string>: play song\n+<playlist>: play playlist\n<url> +<playlist>: download from url and put in playlist"
			;;	
		*)
			send_message "command not known"
	esac
	exit 0
fi


# download playlist from youtube
if [[ "${WORDS[*]}" =~ '/playlist?' ]]; then
	URL=${WORDS[0]}
	logme "detected youtube playlist"
	youtube-dl -f bestaudio --download-archive .archive.txt -o '%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s' "$URL"
	PLAYLIST=$(find . -maxdepth 1 -type d -printf "%T+|%p\n" | sort -nr | head -n1 | cut -d '|' -f2 | cut -b 3-)
	SIZE=$(du "$PLAYLIST" -hs | cut -f1)
	send_message "downloaded playlist '$PLAYLIST' $SIZE"
# download single video from youtube
elif [[ "${WORDS[*]}" =~ "https://" ]]; then
	URL=${WORDS[0]}
	logme "detected youtube url=$URL"
	FILENAME=$(youtube-dl --get-filename -f bestaudio "$URL") # find music title
	youtube-dl -f bestaudio --download-archive .archive.txt -o '%(title)s.%(ext)s' "$URL" # download if not present
	send_message "downloaded ${FILENAME/-???????????.*/}"
	play_stop 'all'
	play_file "$FILENAME"
# pattern matching with $WORDS
else 
	SEARCH=${WORDS[*]}
	play_stop 'all'
	find -iname "*$SEARCH*" ! -name ".*" -type f | sort | while read file; do
		[ -f $STOPFLAG ] && break		
		play_file "${file#./}"
	done
fi
	
rm -f $STOPFLAG

exit 0
